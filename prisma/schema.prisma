// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  email       String        @unique
  pseudo      String        @unique
  password    String
  lastname    String?
  firstname   String?
  telephone   String?
  mobile      String?
  paymentType String?
  payment     Payment?      @relation(fields: [paymentType], references: [type])
  role        Role          @relation(fields: [roleName], references: [name])
  roleName    String        @default("CUSTOMER")
  sessions    SessionCart[]
  addresses   Address[]
  articles    Article[]
  reviews     Review[]
  comments    Comment[]
  carts       Cart[]
}

model Role {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  name        String     @unique
  users       User[]
}

model Address {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  address     String
  city        String
  zipCode     Int
  userName    String
  user        User       @relation(fields: [userName], references: [pseudo])
}

model Article {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  title       String
  image       String?
  description String     @db.Text()
  price       String
  userName    String
  user        User       @relation(fields: [userName], references: [pseudo])
  quantity    Int        @default(1)
  reviews     Review[]
  comments    Comment[]
  categories  CategoriesOnArticle[]
  carts       Cart[]
}

model Payment {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  type        String     @unique
  users       User[]
}

model SessionCart {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  session     String     @unique
  userId      Int
  user        User       @relation(fields: [userId], references: [id])
  carts       Cart[]
}

model Cart {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  sessionId   Int
  session     SessionCart   @relation(fields: [sessionId], references: [id])
  articleId   Int
  article     Article       @relation(fields: [articleId], references: [id])
  quantity    Int
  price       String
  userName    String
  user        User          @relation(fields: [userName], references: [pseudo])
}

model Review {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  score       Int
  message     String
  articleId   Int
  article     Article    @relation(fields: [articleId], references: [id])
  userName    String
  user        User       @relation(fields: [userName], references: [pseudo])
}

model Comment {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  message     String
  userName    String
  user        User       @relation(fields: [userName], references: [pseudo])
  articleId   Int
  article     Article    @relation(fields: [articleId], references: [id])
}

model Category {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  name        String     @unique
  articles    CategoriesOnArticle[]
}

model CategoriesOnArticle {
  articleId     Int
  article       Article     @relation(fields: [articleId], references: [id])
  categoryName  String
  category      Category    @relation(fields: [categoryName], references: [name])
  assignedAt    DateTime    @default(now())

  @@id([articleId, categoryName])
}
